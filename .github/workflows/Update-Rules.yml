name: Update Rules
on:
  workflow_dispatch:
  schedule:
    - cron: '0 */12 * * *'
  push:
    paths:
      - 'data/python/**'
      - 'data/mod/**'

jobs:
  update:
    runs-on: ubuntu-latest
    timeout-minutes: 350
    steps:
      # ==================== 初始化阶段 ====================
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          sudo apt-get update -q
          sudo apt-get install -y -q --no-install-recommends dnsutils parallel
          pip install --no-cache-dir uvloop==0.17.0 tldextract==3.4.1 aiodns pyyaml requests
        env:
          PIP_NO_CACHE_DIR: "true"

      # ==================== 核心处理阶段 ====================
      - name: Download and Process Rules
        id: process
        run: |
          # 下载规则
          mkdir -p ./tmp
          echo "::group::📥 Downloading Rules"
          python ./data/python/dl.py || echo "部分规则下载失败"
          echo "::endgroup::"

          # DNS验证
          echo "::group::🔍 DNS Validation"
          python ./data/python/dns.py \
            --input ./tmp \
            --output ./data/rules \
            --timeout 1.5 \
            --workers ${{ github.runner.os == 'Linux' && '8' || '4' }} \
            --cache ./tmp/dns_cache.json
          echo "::endgroup::"

          # 生成各类规则
          echo "::group::🛠️ Generating Rules"
          parallel ::: \
            "python ./data/python/merge.py" \
            "python ./data/python/qx.py" \
            "python ./data/python/mihomo.py" \
            "python ./data/python/loon.py"
          echo "::endgroup::"

          # 更新元数据
          echo "::group::📝 Updating Metadata"
          python ./data/python/domain_list.py
          python ./data/python/title.py
          python ./data/python/clean-readme.py
          echo "::endgroup::"
        continue-on-error: true
        env:
          PYTHONUNBUFFERED: 1

      # ==================== 提交阶段 ====================
      - name: Commit Changes
        if: steps.process.outcome == 'success'
        run: |
          git config --local user.name "GitHub Actions"
          git config --local user.email "actions@github.com"
          git add --all
          git commit -m "Auto-update: $(date +'%Y-%m-%d %H:%M:%S UTC%z')" || echo "No changes"
          for i in {1..3}; do git pull --rebase && git push && break || sleep 10; done

      # ==================== 后处理阶段 ====================
      - name: Upload Error Logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: error-logs-${{ github.run_id }}
          path: |
            ./tmp/*.log
            ./data/python/debug.log

      - name: Cleanup
        if: always()
        run: rm -rf ./tmp/dns_cache.json

      - name: Delete workflow runs 
        uses: Mattraks/delete-workflow-runs@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          retain_days: 0
          keep_minimum_runs: 0