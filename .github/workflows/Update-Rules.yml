name: Update Rules
on: 
  workflow_dispatch:
  schedule:
    - cron: '0 */12 * * *'
  push:
    paths:
      - 'data/python/**'
      - 'data/mod/**'

jobs:
  update:
    runs-on: ubuntu-latest
    env:
      WORKSPACE: ${{ github.workspace }}
      DATA_DIR: ${{ github.workspace }}/data/python
      OUTPUT_DIR: ${{ github.workspace }}/rules
      
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for file changes
        id: changes
        uses: tj-actions/changed-files@v42
        with:
          files: |
            data/python/**
            data/mod/**

      - name: Setup Python
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          pip install requests dnspython python-whois tenacity
        working-directory: ${{ env.WORKSPACE }}

      - name: Download Rules
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        continue-on-error: true
        run: |
          python ${{ env.DATA_DIR }}/dl.py
        working-directory: ${{ env.WORKSPACE }}

      - name: Merge Rules
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          python ${{ env.DATA_DIR }}/merge.py
        working-directory: ${{ env.WORKSPACE }}

      - name: Generate dns＋hosts Rules
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          python ${{ env.DATA_DIR }}/filter-dns.py
        working-directory: ${{ env.WORKSPACE }}

      - name: Generate mihomo Rules
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          python ${{ env.DATA_DIR }}/mihomo.py
        working-directory: ${{ env.WORKSPACE }}

      - name: Update Title&ReadMe
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          python ${{ env.DATA_DIR }}/title.py
          python ${{ env.DATA_DIR }}/clean-readme.py
        working-directory: ${{ env.WORKSPACE }}

      - name: Configure Git
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          git branch -m master
        working-directory: ${{ env.WORKSPACE }}

      - name: Commit Changes
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          git add --all
          git commit -m "Updated at $(TZ=UTC-8 date +'%Y-%m-%d %H:%M:%S')（北京时间）" || echo "No changes to commit"
        working-directory: ${{ env.WORKSPACE }}

      - name: Sync and Push Changes
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          for i in {1..3}; do
            git pull --rebase origin master
            git push origin master && break || sleep 5
          done
        working-directory: ${{ env.WORKSPACE }}

      - name: Delete workflow runs 
        uses: Mattraks/delete-workflow-runs@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          retain_days: 0
          keep_minimum_runs: 0