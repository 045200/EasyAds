name: Update Rules
on: 
  workflow_dispatch:
  schedule:
    - cron: '0 */12 * * *'
  push:
    paths:
      - 'data/python/**'
      - 'data/mod/**'

jobs:
  update:
    runs-on: ubuntu-latest
    env:
      WORKSPACE: ${{ github.workspace }}
      MIHOMO_PATH: ${{ github.workspace }}/data/mihomo-linux-amd64
      
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: 'master'

      - name: Check for file changes
        id: changes
        uses: tj-actions/changed-files@v42
        with:
          files: |
            data/python/**
            data/mod/**

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          pip install requests aiodns

      - name: Manage Mihomo binary
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          # 检查是否需要更新
          LATEST_VERSION=$(curl -sL https://github.com/MetaCubeX/mihomo/releases/latest/download/version.txt | sed 's/v//')
          
          if [ -f "$MIHOMO_PATH" ]; then
            CURRENT_VERSION=$("$MIHOMO_PATH" -v 2>/dev/null | awk '{print $2}' | sed 's/v//' || echo "0.0.0")
            echo "Current version: $CURRENT_VERSION"
            echo "Latest version: $LATEST_VERSION"
            
            if [ "$CURRENT_VERSION" != "$LATEST_VERSION" ]; then
              echo "::notice::Updating Mihomo from v$CURRENT_VERSION to v$LATEST_VERSION"
              UPDATE_MIHOMO=true
            else
              echo "::notice::Mihomo is up-to-date (v$LATEST_VERSION)"
              UPDATE_MIHOMO=false
            fi
          else
            echo "::notice::Downloading Mihomo v$LATEST_VERSION"
            UPDATE_MIHOMO=true
          fi
          
          # 下载新版本（如果需要）
          if [ "$UPDATE_MIHOMO" = true ]; then
            TEMP_FILE=$(mktemp)
            curl -sLo "${TEMP_FILE}.gz" \
              "https://github.com/MetaCubeX/mihomo/releases/latest/download/mihomo-linux-amd64-v${LATEST_VERSION}.gz"
            
            gunzip "${TEMP_FILE}.gz"
            mv "$TEMP_FILE" "$MIHOMO_PATH"
            chmod +x "$MIHOMO_PATH"
            echo "Mihomo updated to v$LATEST_VERSION"
          fi
          
          # 设置输出变量供后续步骤使用
          if [ "$UPDATE_MIHOMO" = true ]; then
            echo "mihomo_updated=true" >> $GITHUB_ENV
          else
            echo "mihomo_updated=false" >> $GITHUB_ENV
          fi

      - name: Download Rules
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        continue-on-error: true
        run: python ./data/python/dl.py
        working-directory: ${{ env.WORKSPACE }}

      - name: Merge Rules
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: python ./data/python/merge.py
        working-directory: ${{ env.WORKSPACE }}

      - name: Generate dns＋hosts Rules
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: python ./data/python/filter-dns.py
        working-directory: ${{ env.WORKSPACE }}

      - name: Generate mihomo Rules
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: python ./data/python/mihomo.py
        working-directory: ${{ env.WORKSPACE }}

      - name: Update Title&ReadMe
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          python ./data/python/title.py
          python ./data/python/clean-readme.py
        working-directory: ${{ env.WORKSPACE }}

      - name: Configure Git
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          git branch -m master

      - name: Commit Changes
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          git add --all
          
          # 定制提交消息
          if [ "${{ env.mihomo_updated }}" = "true" ]; then
            VERSION=$("$MIHOMO_PATH" -v 2>/dev/null | awk '{print $2}' || echo "unknown")
            git commit -m "Updated at $(TZ=UTC-8 date +'%Y-%m-%d %H:%M:%S')（北京时间） + Mihomo v$VERSION"
          else
            git commit -m "Updated at $(TZ=UTC-8 date +'%Y-%m-%d %H:%M:%S')（北京时间）"
          fi || echo "No changes to commit"

      - name: Sync and Push Changes
        if: steps.changes.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          for i in 1 2 3; do
            git pull --rebase origin master
            git push origin master && break || sleep 5
          done

      - name: Cleanup workflow runs
        uses: Mattraks/delete-workflow-runs@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          retain_days: 0
          keep_minimum_runs: 0